/**
 * The Staff Class is the basic blueprint for all staff, and is the super class for waiter, chef, driver and manager.
 * information required to create a staff would be the name. the id is automatically generated by the
 * application.
 * @author Aldana
 * @version 1.0
 */
import javafx.fxml.FXML;
import java.util.objects;
import javafx.fxml.FXMLLoader;
import javafx.scene.Node;
import javafx.scene.Parent;
import javafx.scene.control.Button;
import javafx.scene.control.Label;
import java.io.IOException;

public class Staff {
    private String firstName;
    private String lastName;
    private int id;
    private final int hoursToWork;
    private int totalHoursWorked;

    public Staff(String firstName, String lastName, int id) {
        this.firstName = firstName;
        this.lastName = lastName;
        this.id = id;
        this.hoursToWork = 40;
        this.totalHoursWorked = 0;
    }

    public Staff(){
        this.firstName = "";
        this.lastName = "";
        this.id = 0;
        this.hoursToWork = 40;
    }

    public int getTotalHoursWorked() {
        return totalHoursWorked;
    }

    public void setTotalHoursWorked(int totalHoursWorked) {
        this.totalHoursWorked = totalHoursWorked;
    }

    public String getFirstName() {
        return firstName;
    }

    public void setFirstName(String firstName) {
        this.firstName = firstName;
    }

    public String getLastName() {
        return lastName;
    }

    public void setLastName(String name) {
        this.lastName = name;
    }

    public int getId() {
        return id;
    }

    public void setId(int id) {
        this.id = id;
    }

    /**
     * the <code>hoursRemaining()</code> method allows each staff view their hours remaining for the week after
     * each shift
     * */
    public int hoursRemaining(){
        return hoursToWork - totalHoursWorked;
    }
    public String toString() {
        return String.format("First Name: %S%n" +
                "Last Name: %S%n" +
                "Staff ID: %d%n", firstName, lastName, id);
    }

    /**
     * the <code>approveBooking()</code> method is overridden in the waiter class.
     */
    public void approveBooking(){}

    /**
     * the <code>approveDelivery()</code> method is overridden in the waiter class.
     */
    public void approveDelivery(){}

    /**
     * the <code>isWaiter()</code> method is overridden in the waiter class.
     */
    public boolean isWaiter(){
        return false;
    }

    /**
     * the <code>isDriver()</code> method is overridden in the driver class.
     */
    public boolean isDriver(){
        return false;
    }

    /**
     * the <code>isChef()</code> method is overridden in the chef class.
     */
    public boolean isChef(){
        return false;
    }

}


